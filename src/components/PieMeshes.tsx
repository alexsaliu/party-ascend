/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react"
import { useGLTF, useAnimations } from "@react-three/drei"
import { RigidBody, CylinderCollider } from "@react-three/rapier"
import * as THREE from "three"
import { useStore } from "../store.ts"

export default function PieMeshes(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF("/models/pieMeshes.glb")
  const filteredNodes = Object.keys(nodes).filter(
    (nodeName) => nodes[nodeName] instanceof THREE.Mesh
  )
  const { actions } = useAnimations(animations, group)
  const materialColors = [
    "Material.001",
    "Material.004",
    "Material.003",
    "Material.002"
  ]
  const colors = ["red", "green", "blue", "yellow"]

  const setColorHovered = useStore((state) => state.setColorHovered)

  return (
    <group ref={group} {...props} dispose={null}>
      <RigidBody colliders={false} type="fixed" position-y={-0} friction={2}>
        <CylinderCollider args={[0.1, 2.8]} position={[0, 0, 0]} />
      </RigidBody>
      <group name="Scene">
        {filteredNodes.map((nodeName, index) => {
          const node = nodes[nodeName]
          return (
            <>
              <RigidBody
                key={index}
                type="fixed"
                position-y={0.02}
                friction={2}
                colliders="hull"
                sensor
                onIntersectionEnter={() => {
                  setColorHovered(colors[index % 4])
                  console.log(`enter ${colors[index % 4]}`)
                }}
              >
                <mesh
                  name={nodeName}
                  castShadow
                  receiveShadow
                  geometry={node.geometry}
                  material={materials[materialColors[index % 4]]}
                >
                  {/* <meshBasicMaterial color="white" transparent opacity={0} /> */}
                </mesh>
              </RigidBody>
            </>
          )
        })}
      </group>
    </group>
  )
}

useGLTF.preload("/models/pieMeshes.glb")
